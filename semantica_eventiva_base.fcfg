## Natural Language Toolkit: sem3.fcfg
## 
## Adaptada de la siguiente gramatica:
##
## Alternative simple grammar with transitive verbs and 
## quantifiers for the book. 
## 
## Author: Ewan Klein <ewan@inf.ed.ac.uk> 
## URL: <http://nltk.sourceforge.net>
## For license information, see LICENSE.TXT
##
## Modelo de semantica eventiva


% start S
############################
# Grammar Rules
#############################

S[SEM = <exists e. ?subj(\x. agente(e,x)) & ?vp(e)>] -> NP[NUM=?n,GEN=?g,SEM=?subj] VP[NUM=?n,GEN=?g,SEM=?vp]

NP[ANIM=?an,NUM=?n,GEN=?g,SEM=?np] -> PropN[ANIM=?an,NUM=?n,GEN=?g,SEM=?np]

VP[NUM=?n,SEM=<\e. ?v(e)>] -> V[NUM=?n,SEM=?v]
VP[NUM=?n,SEM=<\e.(?v(e) & ?obj(\x. tema(e, x)))>] -> V[NUM=?n,SEM=?v] NP[-ANIM,SEM=?obj]
VP[NUM=?n,SEM=<\e.(?v(e) & ?obj(\x. tema(e, x)) & ?pp(\y. meta(e,y)))>] -> V[NUM=?n,SEM=?v] NP[-ANIM,SEM=?obj] PP[+A,SEM=?pp]
VP[NUM=?n,SEM=<\e.(?v(e) & ?pp(\x. tema(e, x)))>] -> V[NUM=?n,SEM=?v] PP[+A,SEM=?pp]

PP[+A, SEM=?np] -> P[+A] NP[+ANIM,SEM=?np]


#############################
# Lexical Rules
#############################

PropN[+ANIM,NUM=sg,GEN=masc,SEM=<\P.P(martin)>] -> 'Martín'
PropN[+ANIM,NUM=sg,GEN=fem,SEM=<\P.P(cata)>] -> 'Cata'
PropN[+ANIM,NUM=sg,GEN=masc,SEM=<\P.P(chafa)>] -> 'Chafa'
PropN[+ANIM,NUM=sg,GEN=masc,SEM=<\P.P(fede)>] -> 'Fede'
PropN[+ANIM,NUM=sg,GEN=masc,SEM=<\P.P(pablo)>] -> 'Pablo'
PropN[+ANIM,NUM=sg,GEN=fem,SEM=<\P.P(julia)>] -> 'Julia'
PropN[+ANIM,NUM=sg,GEN=masc,SEM=<\P.P(fer)>] -> 'Fer'
PropN[+ANIM,NUM=sg,GEN=masc,SEM=<\P.P(carlos)>] -> 'Carlos'
PropN[+ANIM,NUM=sg,GEN=fem,SEM=<\P.P(maca)>] -> 'Maca'
PropN[+ANIM,NUM=sg,GEN=fem,SEM=<\P.P(vicky)>] -> 'Vicky'
PropN[-ANIM,NUM=sg,GEN=masc,SEM=<\P.P(ficciones)>] -> 'Ficciones'
PropN[-ANIM,NUM=sg,GEN=fem,SEM=<\P.P(argentina)>] -> 'Argentina'
PropN[-ANIM,NUM=sg,GEN=masc,SEM=<\P.P(rayuela)>] -> 'Rayuela'

V[NUM=sg,SEM=<\e.(fumar(e) & presente(e))>,TNS=pres] -> 'fuma'
V[NUM=pl,SEM=<\e.(fumar(e) & presente(e))>,TNS=pres] -> 'fuman'
V[NUM=sg,SEM=<\e.(caminar(e) & presente(e))>,TNS=pres] -> 'camina'
V[NUM=pl,SEM=<\e.(caminar(e) & presente(e))>,TNS=pres] -> 'caminan'
V[NUM=sg,SEM=<\e.(correr(e) & presente(e))>,TNS=pres] -> 'corre'
V[NUM=pl,SEM=<\e.(correr(e) & presente(e))>,TNS=pres] -> 'corren'
V[NUM=sg,SEM=<\e.(correr(e) & pasado(e))>,TNS=pas] -> 'corrió'
V[NUM=pl,SEM=<\e.(correr(e) & pasado(e))>,TNS=pas] -> 'corrieron'
V[NUM=sg,SEM=<\e.(explotar(e) & presente(e))>,TNS=pres] -> 'explota'
V[NUM=pl,SEM=<\e.(explotar(e) & presente(e))>,TNS=pres] -> 'explotan'
V[NUM=sg,SEM=<\e.(explotar(e) & pasado(e))>,TNS=pas] -> 'explotó'
V[NUM=pl,SEM=<\e.(explotar(e) & pasado(e))>,TNS=pas] -> 'explotaron'


V[NUM=sg,SEM=<\e.(leer(e) & presente(e))>,TNS=pres] -> 'lee'
V[NUM=sg,SEM=<\e.(leer(e) & pasado(e))>,TNS=pres] -> 'leyó'
V[NUM=sg,SEM=<\e.(mirar(e) & presente(e))>,TNS=pres] -> 'mira'
V[NUM=pl,SEM=<\e.(mirar(e) & presente(e))>,TNS=pres] -> 'miran'
V[NUM=sg,SEM=<\e.(romper(e) & presente(e))>,TNS=pres] -> 'rompe'
V[NUM=pl,SEM=<\e.(romper(e) & presente(e))>,TNS=pres] -> 'rompen'
V[NUM=sg,SEM=<\e.(morder(e) & presente(e))>,TNS=pres] -> 'muerde'
V[NUM=pl,SEM=<\e.(morder(e) & presente(e))>,TNS=pres] -> 'muerden'

V[NUM=sg,SEM=<\e.(dar(e) & presente(e))>,TNS=pres] -> 'da'
V[NUM=pl,SEM=<\e.(dar(e) & presente(e))>,TNS=pres] -> 'dan'
V[NUM=sg,SEM=<\e.(dar(e) & pasado(e))>,TNS=pas] -> 'dio'
V[NUM=pl,SEM=<\e.(dar(e) & pasado(e))>,TNS=pas] -> 'dieron'
V[NUM=sg,SEM=<\e.(entregar(e) & presente(e))>,TNS=pres] -> 'entrega'
V[NUM=pl,SEM=<\e.(entregar(e) & presente(e))>,TNS=pres] -> 'entregan'
V[NUM=sg,SEM=<\e.(entregar(e) & pasado(e))>,TNS=pas] -> 'entregó'
V[NUM=pl,SEM=<\e.(entregar(e) & pasado(e))>,TNS=pas] -> 'entregaron'
V[NUM=sg,SEM=<\e.(enviar(e) & presente(e))>,TNS=pres] -> 'envía'
V[NUM=pl,SEM=<\e.(enviar(e) & presente(e))>,TNS=pres] -> 'envían'
V[NUM=sg,SEM=<\e.(enviar(e) & pasado(e))>,TNS=pas] -> 'envió'
V[NUM=pl,SEM=<\e.(enviar(e) & pasado(e))>,TNS=pas] -> 'enviaron'

P[+a] -> 'a'



